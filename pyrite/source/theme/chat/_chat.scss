@use "backend" as *;
/* Begin Chat */
#{c(chat chat)},
#{c(chat chatLoadingWrapper)},
#{c(chat messageLoadingWrapper)},
#{c(chat chatContent)} {
  background-color: transparent;
}
#{c(chat chatContent)} {
  &::before {
    content: none;
  }
  #{c(forums loadingContainer)} {
    background-color: $middle;
  }
}
#{c(chat chatContentInner)},
#{c(chat chatScrollerNSFW)},
#{c(chat noChat)}#{c(chat chatContent)} {
  background-color: $middle;
}

#{c(chat noChannel)} {
  @include bg;
  @include bg2;
  &::before {
    height: 48px;
    background-color: $header;
  }
  &::after {
    top: 48px;
    height: calc(100vh - 48px);
    background-color: $middle;
  }
}

#{c(chat mentioned)},
#{c(chat botMention)} {
  &::before {
    @include bg;
    background-color: var(--mention-background);
    opacity: var(--mention-opacity);
    transition: all ease-in-out;
    width: -webkit-fill-available;
    z-index: -1;
  }
}
#{c(chat mentioned)},
#{c(chat botMention)} {
  &:hover:before {
    opacity: calc( var(--mention-opacity) + 0.2 );
  }
}
#{c(chat botMessageBottom)} {
  color: var(--text-normal);
}

#{c(chat buttonWrapper)} {
  background: transparent;
  border: 1px solid $middle;
  border-radius: 8px;
  #{c(chat button)} {
    &:first-of-type::before {
      border-bottom-left-radius: 8px;
      border-top-left-radius: 8px;
    }
    &:last-of-type::before {
      border-top-right-radius: 8px;
      border-bottom-right-radius: 8px;
    }
    &:hover {
      background-color: transparent;
    }
    @include bg;
    &::before {
      background-color: $primary;
      opacity: 0.6;
    }
    &:hover::before {
      background-color: $hover;
    }
  }
}

#{c(main groupSpacing16)} {
  #{c(chat divider)} {
    --divider-color: var(--red-color);
    text-align: center;
    display: block;
    z-index: 0;
    &:not(#{c(chat dividerUnread)}) {
      border-top: none;
    }
    &#{c(chat dividerHasContent)} {
      margin: 0.5rem auto 1.5rem auto;
      border-top: none;
      #{c(chat unreadPill)} {
        top: 2px;
      }
    }
    // &#{c(chat dividerUnread)} {
    //   #{c(chat dividerContent)} {
    //     color: var(--text-normal);
    //     background-color: var(--divider-color);
    //     font-weight: 600;
    //   }
    // }
  }
}

#{c(chat dividerContent)} {
  background-color: $card;
  color: $primary;
  font-weight: normal;
  margin: 0 8px;
  padding: 2px 10px;
  // width: fit-content;
}

#{c(chat newMessagesBar)} {
  background-color: $primary;
  box-shadow: none;
  opacity: 0.75;
  &:hover {
    opacity: 0.9;
  }
  &:active {
    padding-top: 0;
    opacity: 1;
  }
}

#{c(chat repliedMessage)} {
  &::before {
    border-color: $primary;
    filter: drop-shadow(2px 2px 2px $secondary);
  }
  #{c(chat replyBadge)} {
    background-color: $card;
  }
  // allows for spoiler hover
  #{c(chat repliedTextPreview)} #{c(chat repliedTextContent)} {
    pointer-events: unset;
    a, span {
      pointer-events: none;
    }
  }
}

#{c(chat chatHeader)} {
  #{c(chat emptyChannelIcon)} {
    background-color: var(--card-background);
  }
  #{c(chat chatHeaderButton)},
  #{c(chat chatHeaderButton)}:hover {
    color: $primary;
  }
}
#{c(chat allowedRole)} {
  background-color: var(--card-background);
}


#{c(chat messageContent)} {
  #{c(chat chatTimestamp)} {
    time {
      font-size: 0;
      &:before {
        content: "(" attr(aria-label) ")";
        text-transform: lowercase;
        font-size: 0.625rem;
      }
      #{c(chat chatEdited)} {
        display: none;
      }
    }
  }
}
#{c(main dark)},
#{c(main light)} {
  #{c(chat spoilerText)}#{c(chat spoilerHidden)},
  #{c(chat spoilerText)}#{c(chat spoilerHidden)}:hover {
    background-color: $card;
  }
}

#{c(chat spoilerText)}#{c(chat spoilerHidden)}:hover {
  opacity: 0.7;
  #{c(chat spoilerContent)} {
    transition: opacity .5s .5s ease-in-out;
    opacity: 1;
  }
}

// who the hell uses those wave stickers?
#{c(chat compactContainer)},
#{c(chat compactButton)},
#{c(chat containerExpanded)} {
  display: none;
}

#{c(chat botTag)} {
  background-color: $primary;
}

#{c(chat gifFavoriteButton)} {
  #{c(chat gifFavoriteSelected)}#{c(chat gifFavoriteShowPulse)} #{c(chat gifFavoriteIcon)} {
    animation: gifBounce .4s linear;
  }
  #{c(chat gifFavoriteSelected)}#{c(chat gifFavoriteShowPulse)}:after {
    animation: gifRipple .45s ease;
  }
  &::after {
    border-color: $primary;
  }
  &:hover,
  &#{c(chat gifFavoriteSelected)} {
    color: $primary;
  }
}


#{c(chat zalgoBlocker)} #{c(chat messageContent)},
#{c(chat chatUsername)} {
  overflow: visible;
}

#{c(chat blockquoteContainer)} blockquote {
  background-color: $card;
  padding: 2px 8px 2px 12px;
}
#{c(chat blockquoteDivider)} {
  background-color: $primary;
}

#{c(chat reaction)} {
  margin: 0 3px 3px 0;
  border-radius: 3px;
  background-color: $card;
  &:hover {
    border-color: $hover;
  }
  &:active {
    border-color: $primary;
  }
  &#{c(chat reactionMe)} {
    border-color: $secondary;
    #{c(chat reactionCount)} {
      color: $primary;
    }
  }
  #{c(chat reactionInner)} {
    padding: 0 5px;
  }
  #{c(chat reactionCount)} {
    color: var(--text-muted);
  }
  &#{c(chat reactionMe)},
  &:hover,
  &:active {
    background-color: $card;
  }

  &#{c(chat reactionMe)} {
    #{c(chat reactionCount)},
    &:hover #{c(chat reactionCount)} {
      color: $primary;
      text-shadow: 2px 2px 3px;
    }
  }
}

#{c(chat welcomeCTA)} {
  display: none;
}

#{c(chat chatUsernameTimedOut)} {
  path {
    fill: $red;
  }
}

#{c(chat messageAttachment)} {
  width: unset;
}

#{c(main dark)},
#{c(main light)} {
  #{c(chat channelLinkUserMentionWrapper)} {
    background-color: transparent;
    color: var(--interactive-hover);
    transition: color 50ms ease-out;
    @include bg;
    &::before {
      transition: opacity 50ms ease-out;
      border-radius: 3px;
      background-color: $primary;
      opacity: .25;
    }
    &:hover {
      color: var(--interactive-active);
      &::before {
        opacity: .75;
      }
    }
  }
}
#{c(chat mentioned)} {
    #{c(chat channelLinkUserMentionWrapper)} {
    color: var(--interactive-active);
    &::before {
      opacity: .75;
    }
  }
}

// vc chat
#{c(call wrapper)}#{c(chat chatSidebarOpen)} #{c(call container)} {
  border-radius: 0;
}

// Home
#{c(main dark)},
#{c(main light)} {
  #{c(chatHome chatBackground)} {
    background-color: transparent;
  }
}
#{c(chatHome container)} {
  background-color: $middle;
}
#{c(chatHome contentCard)} {
  @include card;
  &:hover {
    border-color: $primary;
    box-shadow: none;
  }
}
#{c(chatHome widgetChannelContainer)}:hover,
#{c(chatHome widgetChannelMoreUsers)},
#{c(chatHome widgetChannelTypingIndicator)} {
  background-color: transparent;
}
#{c(chatHome tagPill)},
#{c(chatHome widgetChannelIcon)},
#{c(chatHome tagPill)}#{c(forums sidebarPillClickable)}:not(#{c(forums sidebarPillDisabled)}):hover,
#{c(chatHome emptyIcon)} {
  background-color: $card;
}
#{c(chatHome widgetGuildContainer)},
#{c(chatHome widgetChannelsContainer)},
#{c(chatHome emptyContainer)}#{c(chatHome emptyContainerBackground)} {
  @include card;
}
#{c(chatHome widgetGuildIcon)} {
  border: none;
}
#{c(chatHome widgetGuildDotOffline)} {
  background-color: $offline;
}
#{c(chatHome widgetGuildDotOnline)} {
  background-color: $green;
}

// Forums
#{c(main dark)},
#{c(main light)} {
  #{c(forums container)} {
    background-color: $middle;
  }
}
#{c(forums mainCard)},
#{c(forums sidebarGuidelinesCard)},
#{c(forums sidebarCardContainer)},
#{c(forums loadingCard)} {
  @include card;
}
#{c(forums cardContainer)}:active,
#{c(forums cardContainer)}:hover {
  background-color: $card;
  box-shadow: none;
  transform: none;
}
#{c(forums headerBorder)} {
  box-shadow: none;
}
#{c(forums sortContainer)},
#{c(forums sortDropdown)} {
  color: var(--text-normal);
}
#{c(forums sortDropdown)} {
  background-color: $card !important; // !important reason: overwrite css rule
}
#{c(forums cardPinIcon)} {
  background-color: $primary;
}
#{c(forums sidebarPillSelected)} {
  border-color: $primary;
}
#{c(forums cardReaction)} {
  margin: 0 3px 3px 0;
  border-radius: 3px;
  background-color: $card;
  &:hover {
    border-color: $hover;
  }
  &:active {
    border-color: $primary;
  }
  &#{c(forums cardReactionMe)} {
    border-color: $secondary;
    #{c(forums cardReactionCount)} {
      color: $primary;
    }
  }
  #{c(forums cardReactionInner)} {
    padding: 0 5px;
  }
  #{c(forums cardReactionCount)} {
    color: var(--text-muted);
  }
  &#{c(forums cardReactionMe)},
  &:hover,
  &:active {
    background-color: $card;
  }
  &#{c(forums cardReactionMe)} {
    #{c(forums cardReactionCount)},
    &:hover #{c(forums cardReactionCount)} {
      color: $primary;
      text-shadow: 2px 2px 3px;
    }
  }
}
#{c(forums cardNewBadge)} {
  background-color: $primary !important;
}
#{c(forums cardNewBadgeText)} {
  color: var(--header-primary);
}

// Threads
#{c(chat chat)}#{c(chat threadSidebarOpen)} {
  border-radius: 0;
  #{c(header toolbar)} {
    right: 0;
  }
  // &#{c(chat threadSidebarFloating)} {
  // }
}
#{c(threads resizeHandle)} {
  width: 4px;
  &:hover,
  &:active {
    transition: background-color 0.25s ease-in-out 0.25s; 
    background-color: $primary;
  }
}
#{c(threads container)} {
  border-radius: 0;
  background-color: transparent;
}
#{c(threads chat)},
#{c(threads newChat)} {
  &::before {
    content: none;
  }
}
#{c(threads header)},
#{c(threads newChat)} {
  background-color: $middle;
}
#{c(threads iconWrapper)} {
  background-color: $card;
}
#{c(threads newTextAreaFocused)} {
  border-color: transparent;
}
#{c(threads newTextAreaError)} {
  border-color: $red;
}
#{c(chat cozy)}#{c(threads msgHasThread)}::after,
#{c(threads msgSpine)} {
  border-color: $primary;
  filter: drop-shadow(2px 2px 2px $secondary);
}