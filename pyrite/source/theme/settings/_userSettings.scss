@use "backend" as *;
/* Start User Settings */
#{c(main layer)},
#{c(userSettings standardSidebarView)},
#{c(userSettings contentRegion)} {
  background-color: transparent;
}
#{c(userSettings sidebarRegionScroller)} {
  background-color: $side;
}
#{c(userSettings sidebar)} {
  #{c(userSettings sidebarHeader)} {
    @include header;
    font-weight: 600;
    font-size: 16px;
  }
  #{c(userSettings sidebarSeparator)} {
    background-color: $secondary;
  }
}
#{c(userSettings sidebarInfo)} {
  #{c(chatForm colorMuted)} {
    color: var(--interactive-normal);
  }
}
#{c(userSettings sidebarItem)} {
  &[style*="color: rgb(114, 137, 218)"] {
    color: $primary !important; // !important reason: element.style
  }
  &[style*="background-color: rgba(114, 137, 218, 0.1)"] {
    background-color: transparent !important; // !important reason: element.style
    color: $primary;
    @include bg;
    &:before {
      background-color: $primary;
      opacity: 0.1;
      border-radius: 6px;
    }
  }
  // &[style*="background-color: rgb(114, 137, 218)"] {
  //   background-color: $primary !important; // !important reason: element.style
  //   color: #fff !important; // !important reason: element.style, overlapping rules
  // @debug "fixed color";
  // }
}

#{c(userSettings contentRegionScroller)} {
  background-color: $middle;
  #{c(serverSettings auditScroller)} {
    background-color: transparent;
  }
}

#{c(userSettings contentColumn)} {
  #{c(userSettings fieldList)} {
    background-color: transparent;
  }
}

#{c(userSettings accountProfile)} {
  background-color: $card;
  #{c(userSettings accountProfileBackground)} {
    padding: 8px 0 0 0;
    background-color: transparent;
  }
  #{c(userSettings accountProfileAvatar)} {
    border-color: transparent;
    background-color: transparent;
  }
}

#{c(userSettings profileNitroNotice)} {
  display: none;
}
#{c(userSettings profileAvatarUploader)} {
  border-color: transparent;
  background-color: transparent;
}
#{c(userSettings profileBannerPreview)} { 
  background-color: transparent;
  #{c(userSettings profilePopoutInfo)} {
    background-color: $side;
  }
}

#{c(userSettings radioGroupItem)} {
  background-color: var(--background-modifier-accent);
  &:hover:not([aria-checked=true]) {
    background-color: var(--background-modifier-hover);
  }
  &[aria-checked=true] {
    background-color: var(--background-modifier-selected);
  }
}
#{c(userSettings radioBar)} {
  border-left: 3px solid var(--header-primary);
  border-left-color: var(--offline-color);
  border-left-color: var(--radio-bar-accent-color);
  &[style*="--radio-bar-accent-color"] {
    #{c(userSettings radioIconForeground)} {
      color: var(--radio-bar-accent-color);
    }
  }
  &[style*="hsl(139, calc(var(--saturation-factor, 1) * 47.3%), 43.9%)"] {
    --radio-bar-accent-color: var(--green-color) !important; // !important reason: element.style
  }
  &[style*="hsl(38, calc(var(--saturation-factor, 1) * 95.7%), 54.1%)"] {
    --radio-bar-accent-color: var(--yellow-color) !important; // !important reason: element.style
  }
  &[style*="hsl(21, calc(var(--saturation-factor, 1) * 90.7%), 57.6%)"] {
    --radio-bar-accent-color: var(--secret-orange) !important; // !important reason: element.style
  }
  &[style*="hsl(359, calc(var(--saturation-factor, 1) * 82.6%), 59.4%)"] {
    --radio-bar-accent-color: var(--red-color) !important; // !important reason: element.style
  }
}
#{c(userSettings radioIconForeground)} {
  color: $primary;
}

#{c(userSettings cardPrimary)},
#{c(userSettings cardPrimaryEditable)},
#{c(userSettings cardPrimaryOutline)},
#{c(userSettings cardPrimaryOutlineEditable)} {
  @include card;
}

#{c(userSettings accountList)} {
  @include card;
}
#{c(userSettings accountButton)} #{c(userSettings accountButtonInner)} {
  background-color: var(--background-modifier-accent);
  &:hover {
    background-color: var(--background-modifier-hover);
  }
}
#{c(userSettings connection)} {
  @include card;
  #{c(userSettings connectionHeader)} {
    background-color: $card;
    padding: 10px 20px;
  }
}

#{c(main dark)},
#{c(main light)} {
  #{c(userSettings codeRedemptionRedirect)} {
    @include card;
  }
}

#{c(main dark)},
#{c(main light)} {
  #{c(userSettings nitroFeature)} {
    @include card;
    min-height: unset;
    padding: 16px;
    #{c(userSettings nitroFeatureImageWrapper)} {
      display: none;
    }
  }
}

#{c(main dark)},
#{c(main light)} {
  #{c(userSettings boostCardGemContainer)} {
    background-color: transparent;
  }
}
#{c(userSettings boostGuildsSection)} {
  margin-bottom: 32px;
}
#{c(userSettings boostCardWrapper)} {
  background-color: transparent;
  #{c(friends itemCardOuter)} {
    background-color: transparent;
  }
  #{c(userSettings boostCardNoIcon)} {
    background-color: $card;
  }
}
#{c(userSettings boostDealWrapper)} {
  &:before {
    content: none;
  }
}

#{c(userSettings closeButtonContainer)} {
  color: $primary;
  &:hover,
  &:active {
    color: $hover;
  }
  #{c(userSettings closeButton)} {
    border-color: currentColor;
    &:hover,
    &:active {
      background-color: transparent;
    }
    &>svg>path {
      fill: currentColor;
    }
  }
  #{c(userSettings closeButton)}+#{c(userSettings closeButtonKeybind)},
  #{c(userSettings closeButton)} {
    color: currentColor;
  }
}

#{c(main dark)},
#{c(main light)} {
  #{c(userSettings subscriptionsNoItemsIconSubs)},
  #{c(userSettings subscriptionsNoItemsIconCredits)} {
    background-color: transparent;
  }
}

#{c(userSettings subscriptionsNoItemsCardSubs)},
#{c(userSettings subscriptionsNoItemsCardCredits)} {
  @include card;
}