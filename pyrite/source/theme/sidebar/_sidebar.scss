@use "backend" as *;
/* Start Sidebar */
// Base
#{c(sidebar sidebar)} {
  background-color: transparent;
  @include bg;
  @include bg2;
  &::before {
    background-color: $side;
    top: 48px;
    width: 240px;
  }
  &::after {
    background-color: $header;
    height: 48px;
    width: 240px;
    z-index: 1001;
  }
}
#{c(os mac)} {
  #{c(sidebar sidebar)}::after {
    -webkit-app-region: drag;
  }
}
// Area - Friends List
#{c(sidebar privateChannels)} {
  background-color: transparent;
  #{c(sidebar searchBar)} {
    z-index: 1010;
    background-color: transparent;
    box-shadow: none;
  }
  #{c(sidebar scroller)} {
    background-color: transparent;
    width: 240px;
    #{c(sidebar privateChannelLink)}[href="/store"],
    #{c(sidebar privateChannelLink)}[href="/library"],
    #{c(sidebar privateChannelBadgeIcon)} {
      display: none;
    }
    #{c(sidebar privateChannel)} {
      padding: 0;
    }
    #{c(sidebar privateChannelLink)} {
      padding: 1px 0;
    }
  }
  #{c(sidebar privateChannelRecipientsInviteButtonIcon)} {
    color: var(--interactive-normal);
    order: -1;
    &:hover {
      color: var(--interactive-hover);
      filter: drop-shadow(0 0 2px var(--interactive-normal));
    }
  }
}
#{c(sidebar searchBar)} {
  #{c(sidebar searchBarComponent)} {
    -webkit-app-region: no-drag;
    background-color: var(--card-background);
  }
}

#{c(sidebar privateChannelsHeader)} {
  color: var(--category-color);
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  &::before {
    content: "";
    height: 2px;
    flex-grow: 1;
    margin-right: 5px;
    background: linear-gradient(to left, currentColor -50%, transparent 50%);
  }
}
// Area - Channels
#{c(sidebar channelsContainer)} {
  background: transparent;
  #{c(sidebar channelsContainerContent)} {
    >div[style="height: 84px;"]{
      height: 132px !important; // !important reason: element.style
    }
  }
  #{c(sidebar channelsHeaderContainer)} {
    box-shadow: none;
    #{c(sidebar serverName)} {
      @include header;
      overflow: visible;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    #{c(sidebar channelsHeader)} {
      z-index: 1010;
      box-shadow: none;
    }
  }
  #{c(sidebar animatedContainer)} {
    background-color: transparent;
    top: 48px;
    z-index: 2;
    &[style*="(-90px)"] {
      z-index: -3000;
    }
    #{c(sidebar bannerImage)} {
      &:before {
        content: none;
      }
    }
  }
  #{c(sidebar channelsScroller)} {
    background-color: transparent;
    width: 240px;
  }
}
#{c(sidebar channelModeUnread)} #{c(sidebar channelUnreadBlob)} {
  background-color: $primary;
  filter: drop-shadow(0 0 2px $primary) drop-shadow(0 0 4px $primary);
}
#{c(sidebar bannerVisible)} #{c(sidebar channelsHeader)} {
  filter: none;
}
#{c(sidebar voiceSpeaking)} {
	box-shadow: inset 0 0 0 2px $primary;
}

#{c(sidebar loadingCategory)},
#{c(sidebar loadingChannelIcon)},
#{c(sidebar loadingChannelName)} {
  background-color: $primary;
}

#{c(sidebar channelUnreadBanners)} {
  width: 224px;
}

// Panels
#{c(sidebar panels)} {
  background-color: transparent;
  width: 240px;
  #{c(sidebar panelUsername)} {
    @include header;
  }
  #{c(sidebar panelContainer)} #{c(sidebar panelButtonRow)},
  #{c(sidebar panelVoiceContainer)} #{c(sidebar panelInner)} ~ #{c(sidebar panelButtonRow)},
  #{c(sidebar panelActivityContainer)} #{c(sidebar panelActivityActions)} {
    border: 1px solid $middle;
    border-radius: 8px;
  }
}
#{c(sidebar panelButton)} {
  &:first-of-type::before {
    border-bottom-left-radius: 8px;
    border-top-left-radius: 8px;
  }
  &:last-of-type::before {
    border-top-right-radius: 8px;
    border-bottom-right-radius: 8px;
  }
  &:hover {
    background-color: transparent;
  }
  @include bg;
  &::before {
    background-color: $primary;
    opacity: 0.6;
  }
  &:hover::before {
    background-color: $hover;
  }
}

#{c(sidebar categoryChildren)} {
  order: 1;
}
#{c(sidebar categoryMainContent)} {
  order: 2;
}

#{c(sidebar categoryWrapper)} #{c(sidebar categoryName)} {
  display: flex;
  justify-content: center;
  align-items: center;
  &::before {
    content: "";
    height: 2px;
    flex-grow: 1;
    background: transparent;
    margin-right: 5px;
  }
}

#{c(sidebar channelUserLimitWrapper)} {
  background-color: $card;
}
#{c(sidebar channelUsers)} {
  background-color: transparent;
}
#{c(sidebar channelTotal)} {
  background-color: transparent;
  &::after {
    content: "/";
    width: auto;
    height: auto;
    border: none;
    left: -6px;
  }
}

#{c(sidebar channelMainContent)},
#{c(sidebar channelName)},
#{c(sidebar channelIcon)},
#{c(sidebar categoryArrow)},
#{c(sidebar categoryName)} {
  color: inherit !important; // !important reason: i am very lazy. https://cdn.discordapp.com/attachments/747040126294687764/965181579259428924/unknown.png
}

#{c(sidebar privateChannelInteractive)},
#{c(sidebar channelWrapper)} {
  color: var(--read-channel-color);
}

#{c(sidebar channelModeSelected)},
#{c(sidebar privateChannelSelected)},
#{c(sidebar channelWrapper)}:hover:not(#{c(sidebar channelModeMuted)}):not(#{c(sidebar channelModeLocked)}),
#{c(sidebar privateChannelInteractive)}:hover:not(#{c(sidebar privateChannelMuted)}) {
  color: var(--selected-channel-color);
}

#{c(sidebar channelModeUnread)} {
  color: var(--unread-channel-color);
  #{c(sidebar channelUnreadBlob)} {
    display: var(--show-channel-unread-dot, block);
    background-color: currentColor;
  }
  #{c(sidebar channelUnreadBlob)},
  #{c(sidebar channelName)},
  #{c(sidebar channelIcon)} {
    filter: var(--unread-channel-glow, drop-shadow(0 0 2px));
  }
}

#{c(sidebar channelModeMuted)} {
  color: var(--muted-channel-color);
}
#{c(sidebar channelModeConnected)} {
  color: var(--category-color);
}
#{c(sidebar channelModeLocked)} {
  color: var(--locked-voice-channel-color);
}

#{c(sidebar categoryWrapper)},
#{c(sidebar categoryWrapper)}:hover {
  color: var(--category-color);
  &#{c(sidebar categoryCollapsed)} {
    color: var(--read-channel-color);
  }
  &#{c(sidebar categoryMuted)} {
    color: var(--muted-channel-color);
  }
  &:not(#{c(sidebar categoryCollapsed)}) {
    #{c(sidebar categoryName)}::before {
      background: linear-gradient(to left, currentColor -50%, transparent 50%);
    }
  }
}



