@use "start" as *;
@use "backend" as *;
/* Begin Keyframes */

// ALWAYS USE FULL MOTION BEFORE ANIMATION.

// used in: misc
@keyframes numberBadgeFlash {
  0% {
    background-color: $primary;
    filter: drop-shadow(0 0 3px $secondary) drop-shadow(0 0 5px $secondary);
  }
  50% {
    background-color: $secondary;
    filter: drop-shadow(0 0 3px $primary) drop-shadow(0 0 5px $primary);
  }
  100% {
    background-color: $primary;
    filter: drop-shadow(0 0 3px $secondary) drop-shadow(0 0 5px $secondary);
  }
}
@keyframes numberBadgeFlashBefore {
  0% {
    background-color: $primary;
  }
  50% {
    background-color: $secondary;
  }
  100% {
    background-color: $primary;
  }
}

// used in: misc
@keyframes monke {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

// used in: chat
@keyframes gifRipple {
  0% {
    transform:scale(.4);
    opacity:1;
  }
  90% {
    transform:scale(1.4);
    opacity:0;
  }
  100% {
    transform:scale(1.6);
    opacity:0;
  }
}
@keyframes gifBounce {
  25% {
    transform:scale(.6);
  }
  50% {
    transform:scale(1.2);
  }
  100% {
    transform:scale(1);
  }
}

// used in: error
@keyframes errorScrollMac {
  0% {
    height: 0%;
  }
  100% {
    height: 100%;
  }
}
@keyframes errorPopMac {
  0% {
    opacity: 0;
  }
  99% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

/* Begin Misc */
// Fonts
// body fonts
::placeholder, ::-webkit-input-placeholder,
body, button, input, select, textarea {
  font-family: var(--body-font);
}
::selection {
  background-color: $secondary;

}
// code fonts
code,
#{c(chatForm inlineCode)},
#{c(chatForm afterInlineCode)},
#{c(chatForm beforeInlineCode)},
#{c(chatForm codeLine)},
#{c(chatForm codeBlockText)} {
  font-family: var(--code-font);
}

// Background
#{c(main appMount)} {
  background: transparent;
	@include bg;
	&:before {
		height: 100%;
		width: 100%;
		background: var(--background-image) center/cover no-repeat var(--background-attachment);
    filter: blur(--background-filter);
	}
}

// Transparency to allow the background to work.
html, // because maybe?
body, // this one is here for transparency in bd to work
#{c(main appInner)},
#{c(main bg)},
#{c(main loadingContainer)} {
  background: transparent;
}

// Set z-index
#{c(main backdropWithLayer)} {
  z-index: -1000;
}
#{c(main pictureInPicture)} {
  z-index: 1050;
}
#{c(os titleBar)} {
  z-index: 1100;
}

// Loading Icon. Best seen removing the ONLY reaction of a type in the reaction modal.
#{c(main loadingSquare)} {
  background-color: $primary;
}

// Windows
#{c(os windows)} {
  #{c(os typeWindows)} {
    padding-top: 0;
    margin-top: 0;
    height: 0;
    position: relative;
    @include bg;
    &:before {
      -webkit-app-region: drag;
      height: 18px;
      position: fixed;
    }
    & > #{c(os wordmark)} {
      display: none;
    }
  }
  #{c(sidebar sidebar)} {
    border-radius: 0;
  }
  #{c(serverList servers)} {
    margin-top: 48px;
    overflow: visible;
    @include bg;
    &:before {
      z-index: 1010;
      background-color: $header;
      width: 72px;
      height: 48px;
      top: -48px;
    }
  }
  #{c(os winButton)} {
    width: var(--win-min-max-close-button-width);
  }
  #{c(os winButtonClose)}:hover {
    background: $red;
    color: var(--interactive-hover);
  }
  #{c(header toolbar)} {
    padding-right: calc(3 * var(--win-min-max-close-button-width));
    margin-right: -6px;
  }
  #{c(header nicknames)},
  #{c(header topic)} {
    margin-right: calc(3 * var(--win-min-max-close-button-width));
  }
  #{c(os winButton)} {
    position: relative;
    top: 0;
    height: 48px;
  }
}

// Mac
#{c(os mac)} {
  #{c(os macButtonMinimize)},
  #{c(os macButtonMaximize)} {
    margin-left: 7px;
  }
  #{c(os typeMac)} {
    top: calc(var(--channel-tabs-enabled,0) * calc(66px * var(--channel-tabs-enabled,0)));
    #{c(os macButtons)} {
      height: 48px;
    }
  }
  #{c(serverList servers)} {
    margin-top: 48px;
    overflow: visible;
    @include bg;
    &:before {
      z-index: 1050;
      background-color: $header;
      width: 72px;
      height: 48px;
      top: -48px;
      -webkit-app-region: drag;
    }
  }
  #{c(serverList scroller)} {
    padding-top: 4px;
  }
}
// Linux, Web
#{c(os linux)},
#{c(os web)} {
  #{c(serverList scroller)} {
    padding: 4px 0 0 0;
  }
  #{c(serverList servers)} {
    &:before {
      content: "";
      background-color: $header;
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      width: 100%;
      height: 48px;
      z-index: 1010;
    }
    > #{c(serverList tree)} {
      top: 48px;
      position: relative;
      height: calc(100vh - 48px);
    }
  }
}

// EGGS!
#{c(main focused)}#{c(main fullMotion)} #{c(search noResultsImage)}#{c(search OOOOHHHHHHHHBANANA)},
#{c(main focused)}#{c(main reduceMotion)} #{c(search noResultsImage)}#{c(search OOOOHHHHHHHHBANANA)}:hover {
  animation: monke 6.9s linear infinite;
}

// Enable with Beer
// confused? https://cdn.discordapp.com/attachments/747040126294687764/827442200094179338/unknown.png
#{c(embeds textOpenFullPreview)} {
  &:before {
    content: "🍺";
  }
  > svg {
    display: none;
  }
}

// Are you a robot?
// commented bc i cannot find a way to get it up
// #{c(main areYouARobotContainer)} {
//   background-color: $header;
//   backdrop-filter: blur(5px);
// }

/* Checkboxes */
#{c(main checkbox)} {
  border-color: $primary !important; // !important reason: element.style when selected
  &#{c(main checkboxChecked)} {
    box-shadow: inset 0 0 3px 1px $primary;
    border-color: $primary !important; // !important reason: element.style
    > svg > path {
      fill: $primary; 
    }
    &[style*="background-color:"] {
      background-color: transparent !important; // !important reason: element.style
    }
  }
}

/* "Other". */
// I don't know where this stuff is used in the site.
#{c(other developerPortalCtaWrapper)} {
  background-color: $card;
}
// Rings - tab around and you'll find it.
#{c(other ring)} {
  &[style*="var(--focus-primary)"] {
    --__adaptive-focus-color: var(--primary-color) !important; // !important reason: element.style
  }
}
#{c(main keyboardMode)} #{c(other focusStroke)} {
  fill: $primary;
  stroke: $primary;
}
// Goto Message Links
#{c(main anchorLink)} {
  &[href^="https://canary.discord.com/channels/"],
  &[href^="https://ptb.discord.com/channels/"],
  &[href^="https://discord.com/channels/"] {
    font-size: 0;
    &:hover {
      text-decoration: none;
    }
    &:hover:before {
      background-color: $primary;
      color: var(--interactive-normal);
    }
    &:before {
      content: var(--jumpToMessage, "Jump to message");
      font-size: 1rem;
      padding: 0 3px;
      border-radius: 3px;
      color: $primary;
      text-decoration-color: currentColor;
    }
  }
}
html[lang="fr"] {
  --jumpToMessage: "Aller au message";
}
// insecure links
a[href^="http://"] {
  color: $red;
  text-shadow: 0 0 2px $red;
}

/* HLJS */
#{c(hljs comment)},
#{c(hljs quote)} {
  font-style: italic;
}


/* A few blurs */
#{c(main loadingContainer)} {
  backdrop-filter: blur(5px);
}
#{c(main backdrop)},
#{c(main backdropWithLayer)} {
  backdrop-filter: blur(3px);
  background-color: transparent !important;
}

/* Animations */
#{c(main fullMotion)}#{c(main focused)} {
  #{c(serverList numberBadge)} {
    animation: numberBadgeFlash 5s linear infinite;
    &:before {
      animation: numberBadgeFlashBefore 5s linear infinite;
    }
  }
  #{c(ipt inboxUnreadMessagesCountWrapper)} {
    animation: numberBadgeFlashBefore 5s linear infinite;
  }
}

/* Version */
#{c(userSettings sidebarInfo)} {
  &::after {
    content: $theme-name str-insert($version, " - ", 0);
    font-style: italic;
    color: var(--interactive-normal);
    font-size: 12px;
    line-height: 16px;
  }
}
/* Beta Version */
html[lang="en-GB"] #{c(userSettings sidebarInfo)} {
  &::after {
    content: $theme-name str-insert($version, " Beta Branch - ", 0);
  }
}
html[lang="fr"] #{c(userSettings sidebarInfo)} {
  &::after {
    content: $theme-name str-insert($version, " Branche Bêta - ", 0);
  }
}
#{c(userSettings contentColumn)} > div > :nth-child(2) > :only-child > div > div > {
  :nth-child(3) > #{c(userSettings radioBar)} > :nth-child(2) > div:after {
    content: "Pyrite Beta Branch";
    font-size: 14px;
    color: $primary;
    font-style: italic;
  }
  :nth-child(6) > #{c(userSettings radioBar)} > :nth-child(2) > div:after {
    content: "Branche Bêta de Pyrite";
    font-size: 14px;
    color: $primary;
    font-style: italic;
  }
}

/* Official Preset Previews */
#{c(chat messageAttachmentsContainer)} {
  &#message-accessories-965224792238215218,
  &#message-accessories-965224852233523200,
  &#message-accessories-965224604350160966,
  &#message-accessories-965224956780744735 {
    margin-bottom: 20px;
    #{c(embeds textContainerUp)} {
      border: none;
      background-color: transparent;
      #{c(embeds textContainer)} {
        @include bg;
        @include bg2;
        &:before {
          background: center/ cover no-repeat;
        }
        &:after {
          background: url(https://leafyluigi.github.io/images/preview-overlay.png) center/ cover no-repeat;
        }
        pre {
          display: none;
        }
      }
    }
    #{c(embeds textFooter)} {
      width: 300px;
      position: relative;
      bottom: -40px;
      #{c(embeds toggleExpandedPreview)},
      #{c(embeds attachmentName)},
      #{c(embeds attachmentSize)},
      #{c(embeds codeIcon)} {
        display: none;
      }
    }
  }
  // synthscape orange
  &#message-accessories-965224792238215218 {
    #{c(embeds textContainerUp)} #{c(embeds textContainer)}:before {
      background-image: url('https://leafyluigi.github.io/images/Synthscape%20by%20AxiomDesign.png');
    }
  }
  // yellow flower
  &#message-accessories-965224852233523200 {
    #{c(embeds textContainerUp)} #{c(embeds textContainer)}:before {
      background-image: url('https://leafyluigi.github.io/images/Xieleqiao Town by Huangdan2060.png');
    }
  }
  // ocean blue, current default
  &#message-accessories-965224604350160966,
  &#message-accessories-965224956780744735 {
    #{c(embeds textContainerUp)} #{c(embeds textContainer)}:before {
      background-image: url('https://leafyluigi.github.io/images/pexels-josh-sorenson-116359.png');
    }
  }
}

/* Tags */
#{c(chat messageContents)} > #{c(chat chatAvatar)} ~ #{c(chat chatHeaderUsername)} #{c(chat chatUsername)}:after {
  content: var(--local-tag, none);
  color: currentcolor;
  font-size: 11px;
  display: inline-block;
  margin-left: 4px;
  transform: skewX(-15deg);
}

$dev: (
  "309976820109803520", // Leafy
);
$helper: (
  "126652966265421824", // Scars
  "393900343135830016", // Nyx
  "359175647257690113", // Vozer
);

#{c(chat chatAvatar)} {
  @each $userID in $dev {
    &[src*="#{$userID}"] ~ #{c(chat chatHeaderUsername)} {
      --local-tag: "Theme Dev";
    }
  }
  @each $userID in $helper {
    &[src*="#{$userID}"] ~ #{c(chat chatHeaderUsername)} {
      --local-tag: "Theme Helper";
    }
  }
}

/* Redownload pls bar */
#{c(main appContainer)}::before {
  content: "Your version of Pyrite is outdated. Please redownload.";
  text-align: center;
  position: absolute;
  color: #fff;
  white-space: pre-wrap;
  box-sizing: border-box;
  padding: 10px 0;
  background-color: $header;
  display: var(--update-notice-2-point-oh, block);
  z-index: 2500;
}