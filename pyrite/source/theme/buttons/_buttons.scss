@use "backend" as *;
/* Start Buttons */
// THIS WILL **NOT** BE EVERY BUTTON. SOME WILL BE UNIQUELY THEMED.

// Button Locations:
// filled green : discord nitro
// filled yellow : pc updater
// filled red : pc plugins
// filled brand : my account
// filled primary : discord nitro
// filled grey : add server modal
// inverted brand : discord nitro, playing user popout modal
// outlined red : authorized whatever
// outlined brand : privacy (at bottom)
// ghost grey : server settings widget (copy buttons)
// link primary : my account -> edit
// link brand : reset nickname

#{c(main appMount)} {
  #{c(button lookFilled)} {
    &:before {
      transition: background-color .17s ease;
    }
    &#{c(button colorGreen)} {
    }
    &#{c(button colorYellow)} {
    }
    &#{c(button colorRed)} {
    }
    &#{c(button colorWhite)} {
    }
    &#{c(button colorGrey)} {
    }
    &#{c(button colorBlack)} {
    }
    &#{c(button colorBrand)} {
      color: var(--text-normal);
      @include button-bg($color: $primary);
    }
    &#{c(button colorLink)} {
    }
    &#{c(button colorTransparent)} {
    }
  }
  #{c(button lookInverted)} {
    &:before {
      transition: background-color .17s ease;
    }
    &#{c(button colorGreen)} {
    }
    &#{c(button colorYellow)} {
    }
    &#{c(button colorRed)} {
    }
    &#{c(button colorWhite)} {
    }
    &#{c(button colorGrey)} {
    }
    &#{c(button colorBlack)} {
    }
    &#{c(button colorBrand)} {
      @include button-inverted($color: $primary);
    }
    &#{c(button colorLink)} {
    }
    &#{c(button colorTransparent)} {
    }
  }
  #{c(button lookOutlined)} {
    &#{c(button colorGreen)} {
    }
    &#{c(button colorYellow)} {
    }
    &#{c(button colorRed)} {
    }
    &#{c(button colorWhite)} {
    }
    &#{c(button colorGrey)} {
    }
    &#{c(button colorBlack)} {
    }
    &#{c(button colorBrand)} {
      @include button-border($color: $primary);
      > #{c(button contents)} {
        filter: brightness(1.5);
      }
    }
    &#{c(button colorLink)} {
    }
    &#{c(button colorTransparent)} {
    }
  }
  #{c(button lookGhost)} {
    &#{c(button colorGreen)} {
    }
    &#{c(button colorYellow)} {
    }
    &#{c(button colorRed)} {
    }
    &#{c(button colorWhite)} {
    }
    &#{c(button colorGrey)} {
    }
    &#{c(button colorBlack)} {
    }
    &#{c(button colorBrand)} {
      @include button-ghost($color: $primary);
      > #{c(button contents)} {
        filter: brightness(1.5);
      }
    }
    &#{c(button colorLink)} {
    }
    &#{c(button colorTransparent)} {
    }
  }
  #{c(button lookLink)} {
    &#{c(button colorGreen)} {
    }
    &#{c(button colorYellow)} {
    }
    &#{c(button colorRed)} {
    }
    &#{c(button colorWhite)} {
    }
    &#{c(button colorGrey)} {
    }
    &#{c(button colorBlack)} {
    }
    &#{c(button colorBrand)} {
      color: $primary;
    }
    &#{c(button colorLink)} {
    }
    &#{c(button colorTransparent)} {
    }
  }
}
// primary likes to be a bit... different.
#{c(main dark)},
#{c(main light)} {
  #{c(main appMount)} {
    #{c(button lookFilled)} {
      &#{c(button colorPrimary)} {
        color: var(--text-normal);
        @include button-bg($color: $primary);
      }
    }
    #{c(button lookInverted)} {
      &#{c(button colorPrimary)} {
        @include button-inverted($color: $primary);
      }
    }
    #{c(button lookOutlined)} {
      &#{c(button colorPrimary)} {
        @include button-border($color: $primary);
        > #{c(button contents)} {
          filter: brightness(1.5);
        }
      }
    }
    #{c(button lookGhost)} {
      &#{c(button colorPrimary)} {
        @include button-ghost($color: $primary);
        > #{c(button contents)} {
          filter: brightness(1.5);
        }
      }
    }
    #{c(button lookLink)} {
      &#{c(button colorPrimary)} {
      }
    }
  }
}
