// Mixins

/// Create background using a static, opaque color with the ability to change opacity
@mixin bg($o:null,$br:null,$bg:null,$h:null,$w:null,$tr:null,$z:-1,$f:null,$bgf:null,$war:null,$top:null,$right:null,$bottom:null,$left:null,$pos:null) {
	&::before {
		content: "";
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
		position: absolute;
		@if $z {z-index: $z;} // default -1
		pointer-events: none;
		// What will need to be defined:
		@if $o {opacity: $o;}
		@if $br {border-radius: $br;}
		@if $bg {background-color: $bg;}
		@if $h {height: $h;}
		@if $w {width: $w;}
		@if $tr {transition: $tr;}
		@if $f {filter: $f;}
		@if $bgf {background: $bgf;} // background full
		@if $war {-webkit-app-region: $war;}
		@if $top {top: $top;}
		@if $right {right: $right;} 
		@if $bottom {bottom: $bottom;} 
		@if $left {left: $left;}
		@if $pos {position: $pos;}
	}
}

@mixin bg2 {
	&::after {
		content: "";
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
		position: absolute;
		z-index: -1;
		pointer-events: none;
		// What will need to be defined:
		// opacity
		// border-radius
		// background-color
	}
}

@mixin list {

}

@mixin card {
	border: 1px solid var(--secondary-color);
	background-color: var(--card-background);
}

@mixin card-light {
	border: 1px solid var(--secondary-color);
	background-color: rgba(255,255,255,0.05); // intentionally set colors
}
@mixin card-dark {
	border: 1px solid var(--secondary-color);
	background-color: rgba(0,0,0,0.5); // intentionally set colors
}

@mixin header {
	color: var(--header-primary);
	text-shadow: 2px 2px 2px var(--header-secondary);
}
@mixin header-line {
	@include header;
	display: flex;
	justify-content: center;
	align-items: center;
	&::before,
	&::after {
		content: "";
		height: 2px;
		flex-grow: 1;
	}
	&::before {
		background: linear-gradient(to left, currentColor -50%, transparent 50%);
		margin-right: 5px;
	}
	&::after {
		background: linear-gradient(to right, currentColor -50%, transparent 50%);
		margin-left: 5px;
	}
}

$hover-filter: var(--hover-filter);
$active-filter: var(--active-filter);
/// Button : (background / border) color will need to be defined.
@mixin button-base($color: null) {
	@include bg($br:3px,$bg:transparent,$z:1);
	> .contents-3ca1mk {
		z-index: 2;
	}
	&:hover:not(:disabled) {
		background-color: $color;
		&::before {
			background: $hover-filter;
		}
	}
	&:active:not(:disabled) {
		background-color: $color;
		&::before {
			background: $active-filter;
		}
	}
}

@mixin button-bg($color: null) {
	background: $color;
	@include button-base($color);
	&:disabled {
		background: $color;
	}
}

@mixin button-color($color: null) {
	color: $color;
	@include button-base($color);
}

@mixin button-inverted($color: null) {
	@include button-color($color);
	background-color: var(--card-background);
	&:disabled {
		background-color: var(--card-background);
	}
}

@mixin button-border($color: null) {
	border-color: $color;
	color: $color;
	background-color: transparent;
	@include bg($br:3px,$bg:transparent,$z:1);
	> .contents-3ca1mk {
		z-index: 2;
	}
	&:hover:not(:disabled) {
		background-color: transparent;
		&::before {
			background-color: $color;
			opacity: 0.15;
		}
	}
	&:active:not(:disabled) {
		background-color: transparent;
		&::before {
			background-color: $color;
			opacity: 0.2;
		}
	}
}

@mixin button-link($color: null) {
	color: $color;
	background-color: transparent;
	> .contents-3ca1mk {
		z-index: 2;
	}
	&:hover:not(:disabled),
	&:active:not(:disabled) {
		>.contents-3ca1mk {
			background-image: linear-gradient(0deg,transparent,transparent 1px, $color 0,$color 2px,transparent 0);
		}
	}
}
